[package]
name = "neat-gru"
version = "1.0.0-alpha"
authors = ["sakex <alexandre@senges.ch>"]
edition = "2018"
description = "NEAT algorithm with GRU gates"
license = "GPL-3.0"
repository = "https://github.com/sakex/neat-gru-rust"
categories = ["science", "wasm"]
keywords = ["neat", "ai", "machine-learning", "genetic", "algorithm"]


[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
serde = { version = "1.0.118", features = ["derive", "rc"] }
serde_json = "1.0.60"
num = "0.4.0"
rand = "0.8.0"
rand_distr = "0.4.0"
numeric_literals = "0.2.0"
rayon = "1.5.0"
itertools = "0.10.0"
async-trait = "0.1.50"


[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.1", features = ["js"] }

[profile.release]
# Link time optimisation, possibly even with C++, equivalent to G++'s -flto
lto = true

# codegen-units of 1 gives best optimization, but disables parallel building.
# Default: 16
codegen-units = 1

# Prevent inserting panic handlers in ASM
panic = "abort"

# Optimisation level, equivalent to G++'s -O3
opt-level = 3
